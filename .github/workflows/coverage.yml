name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
        
    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin --locked
      
    - name: Run tests with coverage
      run: |
        cargo tarpaulin \
          --workspace \
          --exclude-files "*/examples/*" \
          --exclude-files "*/benches/*" \
          --timeout 300 \
          --out xml \
          --output-dir coverage/ \
          --fail-under 35 \
          --verbose
          
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage/cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Generate coverage summary
      run: |
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        
        COVERAGE=$(grep -o 'line-rate="[0-9.]*"' coverage/cobertura.xml | head -1 | grep -o '[0-9.]*')
        COVERAGE_PERCENT=$(echo "$COVERAGE * 100" | bc -l | xargs printf "%.2f")
        
        echo "| Line Coverage | ${COVERAGE_PERCENT}% |" >> $GITHUB_STEP_SUMMARY
        
        if (( $(echo "$COVERAGE_PERCENT >= 80" | bc -l) )); then
          echo "| Status | ✅ Production Ready |" >> $GITHUB_STEP_SUMMARY
        elif (( $(echo "$COVERAGE_PERCENT >= 60" | bc -l) )); then
          echo "| Status | ⚠️ Needs Improvement |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Status | ❌ Insufficient Coverage |" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Archive coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/