[package]
name = "turbomcp"
version = "2.0.0"
edition = "2024"
authors = ["Nicholas Paterno <nick@epistates.com>"]
description = "Rust SDK for Model Context Protocol (MCP) with OAuth 2.1 compliance, ergonomic macros and SIMD acceleration"
license = "MIT"
repository = "https://github.com/Epistates/turbomcp"
homepage = "https://turbomcp.org"
documentation = "https://docs.rs/turbomcp"
readme = "README.md"
keywords = ["mcp", "protocol", "sdk", "llm", "ai"]
categories = ["development-tools", "network-programming", "asynchronous", "web-programming"]
rust-version = "1.89.0"

[lints]
workspace = true


[dependencies]
# Core dependencies
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full", "extra-traits"] }
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
async-trait = "0.1"
thiserror = "2.0.16"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Database examples moved to separate examples crate to keep core SDK dependency-free

# Transport dependencies (optional - only needed for http/client features)
reqwest = { version = "0.12", features = ["json", "stream"], optional = true }
chrono = { version = "0.4", features = ["serde"] }
fastrand = "2.0"
tokio-util = "0.7"
tokio-stream = "0.1"
futures = "0.3"

# HTTP server for SSE support (optional - only needed for http/sse features)
axum = { version = "0.8.4", features = ["ws"], optional = true }
tower-http = { version = "0.6.6", features = ["cors", "compression-gzip", "set-header"], optional = true }

# Authentication and DPoP support (now as separate optional crates for clean minimal build)
turbomcp-auth = { version = "2.0.0", path = "../turbomcp-auth", optional = true }
turbomcp-dpop = { version = "2.0.0", path = "../turbomcp-dpop", optional = true }
# JSON Schema generation
schemars = { version = "1.0", features = ["chrono04", "uuid1"], optional = true }
regex = { version = "1.0", optional = true }
once_cell = "1.19"
inventory = "0.3"
uuid = { version = "1.0", features = ["v4", "v7", "serde"] }

# SIMD dependencies
simd-json = { workspace = true, optional = true }
sonic-rs = { workspace = true, optional = true }

# HTTP dependencies (optional - only needed for http/sse features)
http = { version = "1.0", optional = true }

# Internal dependencies (always required)
turbomcp-core = { version = "2.0.0", path = "../turbomcp-core", features = ["simd"] }
turbomcp-protocol = { version = "2.0.0", path = "../turbomcp-protocol" }
turbomcp-transport = { version = "2.0.0", path = "../turbomcp-transport" }
turbomcp-server = { version = "2.0.0", path = "../turbomcp-server" }
turbomcp-macros = { version = "2.0.0", path = "../turbomcp-macros" }

[dev-dependencies]
tokio-test = "0.4"
chrono = { version = "0.4", features = ["serde"] }
criterion = { version = "0.7.0", features = ["html_reports"] }
tracing-subscriber = "0.3"
tempfile = "3.0"
rand = "0.8.5"
jsonschema = { version = "0.17.1", default-features = false, features = ["resolve-file"] }
rustc-hash = "2.1.1"
walkdir = { workspace = true }
turbomcp-client = { version = "2.0.0", path = "../turbomcp-client" }
tokio-tungstenite = "0.27.0"
proptest = "1.5"

# Example configurations with required features
[[example]]
name = "openai_mcp_server"
required-features = ["http"]

[[example]]
name = "anthropic_mcp_server"
required-features = ["http"]

[[example]]
name = "http_client"
required-features = ["http"]

[[example]]
name = "13_dpop_redis_nonce_tracking"
required-features = ["dpop", "dpop-redis"]

[[example]]
name = "14_dpop_auto_key_rotation"
required-features = ["dpop"]

[[example]]
name = "17_middleware_stack"
required-features = ["full"]

[[example]]
name = "07_transport_showcase"
required-features = ["all-transports"]

[[example]]
name = "transport_http_server"
required-features = ["http"]

[[example]]
name = "transport_tcp_server"
required-features = ["tcp"]

[[example]]
name = "transport_unix_server"
required-features = ["unix"]

[[example]]
name = "streamable_http_v2_full_integration"
required-features = ["http"]

[[example]]
name = "tcp_client_server_demo"
required-features = ["tcp"]

[[example]]
name = "all_transports_demo"
required-features = ["all-transports"]

[[example]]
name = "transport_tcp_client"
required-features = ["tcp"]

[[example]]
name = "transport_unix_client"
required-features = ["unix"]

[[example]]
name = "transport_websocket_client"
required-features = ["websocket"]

[[example]]
name = "transport_websocket_server"
required-features = ["websocket"]

[[example]]
name = "tcp_client"
required-features = ["tcp"]

[[example]]
name = "tcp_server"
required-features = ["tcp"]

[[example]]
name = "unix_socket_client"
required-features = ["unix"]

[[example]]
name = "unix_socket_server"
required-features = ["unix"]

[[example]]
name = "websocket_client"
required-features = ["websocket"]

[[example]]
name = "websocket_server"
required-features = ["websocket"]

[features]
default = ["stdio"]  # 2.0.0 BREAKING: Minimal by default. Use features = ["full"] for 1.x behavior

# ðŸŽ¯ RECOMMENDED FEATURE SETS (choose one):

# For basic tool servers - minimal dependencies, works everywhere
minimal = ["stdio"]

# For production servers - includes HTTP/SSE for web compatibility  
full = [
    "schema-generation",
    "context-injection", 
    "uri-templates",
    "stdio",
    "http",
    "websocket",
    "tcp",
    "unix",
]

# For network servers - STDIO + TCP only
network = ["stdio", "tcp"]

# For system servers - TCP + Unix only (no STDIO)
server-only = ["tcp", "unix"]

# ðŸ“¦ INDIVIDUAL FEATURES:

# Core functionality
schema-generation = ["schemars"]       # JSON Schema generation (recommended)
context-injection = []                 # Enhanced Context API features
uri-templates = ["regex"]             # URI template matching for resources
# database feature removed - examples moved to separate crate for clean dependencies

# Authentication and Security Features (2.0.0: Now separate optional crates)
auth = ["dep:turbomcp-auth"]  # OAuth 2.1, API key authentication
dpop = ["dep:turbomcp-dpop", "auth", "turbomcp-auth/dpop"]  # DPoP (RFC 9449) requires auth
dpop-redis = ["dpop", "turbomcp-dpop/redis-storage"]  # Redis-based DPoP nonce tracking
dpop-hsm-pkcs11 = ["dpop", "turbomcp-dpop/hsm-pkcs11"]  # PKCS#11 HSM support
dpop-hsm-yubico = ["dpop", "turbomcp-dpop/hsm-yubico"]  # YubiHSM support
dpop-hsm = ["dpop-hsm-pkcs11", "dpop-hsm-yubico"]  # All HSM backends
dpop-test-utils = ["dpop", "turbomcp-dpop/test-utils"]  # Test utilities

# Deprecated feature aliases (backwards compatibility)
redis-storage = ["dpop-redis"]

# Transport protocols (progressive enhancement)
stdio = ["turbomcp-transport/stdio", "turbomcp-server/stdio"]           # Standard MCP transport
http = [
    "turbomcp-transport/http",
    "turbomcp-server/http",
    "dep:axum",
    "dep:tower-http",
    "dep:reqwest",
    "dep:http",
]  # HTTP/SSE for web apps
websocket = ["turbomcp-transport/websocket", "turbomcp-server/websocket"] # WebSocket bidirectional
tcp = ["turbomcp-transport/tcp", "turbomcp-server/tcp"]                   # Raw TCP sockets
unix = ["turbomcp-transport/unix", "turbomcp-server/unix"]               # Unix domain sockets

# Performance
simd = ["turbomcp-core/simd", "simd-json", "sonic-rs"]  # SIMD JSON acceleration
# Advanced combinations
all-transports = ["stdio", "http", "websocket", "tcp", "unix"]  # All transports without extra features

## No examples currently shipped from the framework crate. See top-level examples.


[package.metadata.docs.rs]
features = ["full"]
rustdoc-args = ["--cfg", "docsrs"]