[package]
name = "turbomcp-dpop"
version = "1.0.5"
edition = "2021"
authors = ["Nicholas Paterno <nick@epistates.com>"]
description = "RFC 9449 compliant Demonstration of Proof-of-Possession (DPoP) implementation for TurboMCP"
license = "MIT"
repository = "https://github.com/Epistates/turbomcp"
homepage = "https://turbomcp.org"
keywords = ["mcp", "dpop", "oauth", "security", "proof-of-possession"]
categories = ["cryptography", "authentication", "web-programming"]
readme = "README.md"
rust-version = "1.89.0"

[dependencies]
# Core TurboMCP dependencies
turbomcp-core = { version = "1.0.5", path = "../turbomcp-core" }
turbomcp-protocol = { version = "1.0.5", path = "../turbomcp-protocol" }

# Async runtime
tokio = { workspace = true, features = ["sync", "time", "rt"] }
async-trait = { workspace = true }

# Cryptographic foundations
jsonwebtoken = { version = "9.3", optional = true }
ring = "0.17"
rsa = { version = "0.9", features = ["sha2"] }
p256 = { version = "0.13", features = ["ecdsa"] }
rand = "0.8"
sha2 = "0.10"
url = "2.4"
signature = "2.2"

# Serialization and time
serde = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true, features = ["v7", "fast-rng", "serde"] }
chrono = { workspace = true, features = ["serde"] }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Utilities
base64 = "0.22"
hex = "0.4"
zeroize = "1.7"

# Logging
tracing = { workspace = true }

# Optional features
redis = { version = "0.25", features = ["aio", "tokio-comp"], optional = true }
futures = "0.3"
aws-sdk-kms = { version = "1.0", optional = true }

# HSM support - World-class hardware security module integration
cryptoki = { version = "0.10", optional = true }
yubihsm = { version = "0.42", optional = true, features = ["usb", "http"] }
r2d2 = { version = "0.8", optional = true }
deadpool = { version = "0.10", features = ["managed", "rt_tokio_1"], optional = true }
secrecy = { version = "0.8", optional = true }
parking_lot = { workspace = true, optional = true }
# Production-grade ASN.1 parsing for PKCS#11
asn1 = { version = "0.19", optional = true }

# Production-grade cryptographic libraries (removed due to dependency complexity)

[dev-dependencies]
tokio-test = { workspace = true }
criterion = { workspace = true }
pretty_assertions = { workspace = true }
serial_test = "3.0"
# HSM testing infrastructure
tempfile = { workspace = true }
testcontainers = "0.23"

[features]
default = ["jwt-validation"]

# Core DPoP features
jwt-validation = ["dep:jsonwebtoken"]
key-rotation = []

# Storage backends
redis-storage = ["redis"]
memory-storage = []

# Enterprise features - World-class hardware security module integration
hsm-pkcs11 = ["dep:cryptoki", "dep:r2d2", "dep:secrecy", "dep:parking_lot", "dep:asn1"]
hsm-yubico = ["dep:yubihsm", "dep:secrecy"]
hsm-support = ["hsm-pkcs11", "hsm-yubico"] # Enable all HSM backends
aws-kms = ["aws-sdk-kms"]

# Development and testing
test-utils = []

# Benchmarks will be added later
# [[bench]]
# name = "dpop_benchmarks"
# harness = false