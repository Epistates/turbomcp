# Workspace-only Cargo.toml - main SDK is in crates/turbomcp

[workspace]
members = [
    "crates/turbomcp-protocol",
    "crates/turbomcp-transport",
    "crates/turbomcp-server",
    "crates/turbomcp-client",
    "crates/turbomcp-cli",
    "crates/turbomcp",
    "crates/turbomcp-macros",
    "crates/turbomcp-dpop",  # 2.0.0: Re-extracted for clean minimal build
    "crates/turbomcp-auth",  # 2.0.0: Extracted for clean minimal build
    # "crates/turbomcp-security", # DISSOLVED: Security functionality moved to individual crates per ephemeral strategy
    "demo",
]
resolver = "2"

[workspace.lints.clippy]
# Allow pedantic lints that are too strict for this codebase
missing_errors_doc = "allow"
missing_panics_doc = "allow" 
module_name_repetitions = "allow"
return_self_not_must_use = "allow"
cast_possible_truncation = "allow"
cast_sign_loss = "allow"
cast_possible_wrap = "allow"
items_after_statements = "allow"
single_match_else = "allow"
match_same_arms = "allow"
similar_names = "allow"
too_many_lines = "allow"
must_use_candidate = "allow"
missing_const_for_fn = "allow"
struct_excessive_bools = "allow"
uninlined_format_args = "allow"
# Allow test-specific patterns
assertions_on_constants = "allow"
const_is_empty = "allow"

[workspace.dependencies]
# Core async runtime and utilities
tokio = { version = "1.47", features = ["full"] }
tokio-util = { version = "0.7", features = ["full"] }
futures = "0.3"
async-trait = "0.1"
pin-project-lite = "0.2"

# Test utilities
walkdir = "2.4"
tempfile = "3.0"

# Serialization with performance focus
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0", features = ["raw_value", "preserve_order"] }
msgpacker = { version = "0.4", features = ["derive", "alloc"] }  # MessagePack for binary efficiency
sonic-rs = "0.3"   # High-performance JSON
simd-json = "0.13" # SIMD-accelerated JSON parsing
bincode = "1.3"
ciborium = "0.2"

# Schema validation and generation
schemars = { version = "1.0", features = ["chrono04", "uuid1"] }
jsonschema = { version = "0.17.1", default-features = false, features = ["resolve-file"] }

# HTTP/WebSocket/Network
reqwest = { version = "0.12", default-features = false, features = ["json", "stream", "rustls-tls", "http2", "brotli", "gzip"] }
axum = { version = "0.8.4", features = ["ws", "headers", "tracing", "macros"] }
tower = { version = "0.5.2", features = ["full"] }
tower-http = { version = "0.6.6", features = ["full"] }
hyper = { version = "1.0", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
tokio-tungstenite = { version = "0.27.0", features = ["native-tls"] }

# Error handling and diagnostics
thiserror = "2.0.16"
anyhow = "1.0"
miette = { version = "7.0", features = ["fancy"] }
color-eyre = "0.6"

# Observability and monitoring
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json", "tracing-log"] }
tracing-opentelemetry = "0.28"
opentelemetry = "0.28"
opentelemetry-otlp = { version = "0.28", features = ["tonic", "metrics", "logs"] }
opentelemetry_sdk = { version = "0.28", features = ["rt-tokio"] }
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Concurrency and synchronization
parking_lot = "0.12"
dashmap = "6.1.0"
crossbeam = "0.8"
crossbeam-channel = "0.5"
flume = "0.11"
tokio-stream = "0.1"

# Configuration and CLI
config = "0.14"
clap = { version = "4.4", features = ["derive", "env", "color"] }
clap_complete = "4.4"

# Security and authentication
ring = "0.17"
base64 = "0.22"
uuid = { version = "1.6", features = ["v4", "serde"] }
jsonwebtoken = "9.2"

# Time and date handling
chrono = { version = "0.4", features = ["serde"] }
time = { version = "0.3", features = ["serde", "macros"] }

# Memory and performance optimizations
bytes = "1.5"
smallvec = { version = "1.11", features = ["serde"] }
compact_str = { version = "0.7", features = ["serde"] }
ahash = "0.8"
once_cell = "1.19"
arc-swap = "1.6"

# Development and testing
criterion = { version = "0.7.0", features = ["html_reports"] }
proptest = "1.4"
tokio-test = "0.4"
wiremock = "0.6"
pretty_assertions = "1.4"
insta = { version = "1.34", features = ["json", "redactions"] }
rand = "0.8.5"
quickcheck = "1.0"
quickcheck_macros = "1.0"
mock_instant = "0.3"
serial_test = "3.0"
sha2 = "0.10"
testcontainers = "0.25.0"

# Documentation
doc-comment = "0.3"

# Workspace dependencies are defined below
# Internal crate dependencies - 2.0.0-rc RELEASE CANDIDATE (with default-features = false for granular control)
turbomcp = { version = "2.0.0-rc.2", path = "crates/turbomcp" }
# turbomcp-core merged into turbomcp-protocol in v2.0.0
turbomcp-protocol = { version = "2.0.0-rc.2", path = "crates/turbomcp-protocol", default-features = false }
turbomcp-transport = { version = "2.0.0-rc.2", path = "crates/turbomcp-transport", default-features = false }
turbomcp-client = { version = "2.0.0-rc.2", path = "crates/turbomcp-client", default-features = false }
turbomcp-server = { version = "2.0.0-rc.2", path = "crates/turbomcp-server", default-features = false }
turbomcp-macros = { version = "2.0.0-rc.2", path = "crates/turbomcp-macros", default-features = false }
turbomcp-cli = { version = "2.0.0-rc.2", path = "crates/turbomcp-cli", default-features = false }
# turbomcp-dpop = { version = "2.0.0", path = "crates/turbomcp-dpop" }  # INTEGRATED into turbomcp/src/auth/dpop/

[profile.dev]
opt-level = 1
debug = true
overflow-checks = true

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true

# CI-optimized profile for disk space constrained environments
[profile.ci]
inherits = "release"
opt-level = "s"  # Optimize for size
lto = "thin"     # Thin LTO uses less disk space
codegen-units = 16  # More units = less memory but parallel builds
debug = false    # No debug info to save space
strip = true     # Strip symbols
panic = "abort"  # Smaller binaries

[profile.bench]
inherits = "release"
debug = true
strip = false

[profile.test]
opt-level = 1
debug = 2

# Examples are in the individual crates
# Note: Workspace-level benchmarks are in benches/ directory
# Run with: ./scripts/run_benchmarks.sh

# [patch.crates-io]
# Note: paste (RUSTSEC-2024-0436) is unmaintained but compile-time only (zero runtime risk)
# Cannot patch to pastey due to package name mismatch in Cargo's patch mechanism
# Tracked upstream: https://github.com/parallaxsecond/rust-cryptoki/issues/279


